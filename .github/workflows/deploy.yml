name: Deploy to EC2

on:
  push:
    branches:
      - main # 當推送到 main 分支時觸發

jobs:
  deploy:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 執行器

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # 拉取程式碼

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} # 從 GitHub Secrets 獲取私鑰

    - name: Deploy to EC2
      run: |
        set -e # Exit immediately if a command exits with a non-zero status.

        echo "--- Starting Deployment on EC2 ---"
        echo "Current user: $(whoami)"
        echo "Current directory: $(pwd)"

        cd /home/ubuntu/code_now # 替換為你在 EC2 上的專案路徑
        echo "Changed directory to: $(pwd)"

        echo "Checking git status before pull..."
        git status
        echo "Current commit before pull:"
        git log -1

        echo "Pulling latest code from main branch..."
        git pull origin main # 拉取最新程式碼
        echo "Latest code pulled."

        echo "Checking git status after pull..."
        git status
        echo "Current commit after pull:"
        git log -1
        
        # 設定環境變數，這些變數會被 docker-compose 讀取並傳遞給容器
        export VITE_SOCKET_URL="${{ secrets.VITE_SOCKET_URL }}"
        export CORS_ORIGIN="${{ secrets.CORS_ORIGIN }}"
        export MAX_EDITORS="${{ secrets.MAX_EDITORS }}"

        echo "Environment variables set: MAX_EDITORS=$MAX_EDITORS"

        echo "Stopping and removing old containers..."
        docker-compose down --volumes # 停止並移除舊的容器和卷
        echo "Old containers and volumes removed."

        echo "Removing old Docker images..."
        docker rmi $(docker images -q --filter "dangling=true") || true # 移除懸空映像
        docker rmi $(docker images -q --filter "label=com.docker.compose.project=code_now") || true # 移除專案相關映像
        echo "Old Docker images removed."

        echo "Building and starting new containers..."
        docker-compose up -d --build # 重建並啟動新的容器
        echo "New containers built and started."

        echo "Verifying running containers..."
        docker ps -a # 顯示所有容器狀態
        docker images # 顯示所有映像

        echo "--- Deployment to EC2 Finished ---"
